// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	uservo "ifoodish-store/services/user/domain/valueobject"
)

// Request is an autogenerated mock type for the Request type
type Request struct {
	mock.Mock
}

// Context provides a mock function with given fields:
func (_m *Request) Context() context.Context {
	ret := _m.Called()

	var r0 context.Context
	if rf, ok := ret.Get(0).(func() context.Context); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}
	}

	return r0
}

// GetHeader provides a mock function with given fields: header
func (_m *Request) GetHeader(header string) string {
	ret := _m.Called(header)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(header)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetURLParam provides a mock function with given fields: name
func (_m *Request) GetURLParam(name string) string {
	ret := _m.Called(name)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetUserID provides a mock function with given fields:
func (_m *Request) GetUserID() (uservo.UserID, error) {
	ret := _m.Called()

	var r0 uservo.UserID
	if rf, ok := ret.Get(0).(func() uservo.UserID); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(uservo.UserID)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ParseBody provides a mock function with given fields: dest
func (_m *Request) ParseBody(dest interface{}) error {
	ret := _m.Called(dest)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(dest)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
